version: 2.1

commands:
  test-nodejs:
    steps:
      - run:
          name: Versions
          command: npm version
      - checkout
      - restore_cache:
          keys:
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{ arch }}-npm-cache-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
            - v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{ arch }}-npm-cache-master-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Install dependencies
          command: |
            npm ci
            sudo apt-get install postgresql-client
            sudo apt-get install mysql-client
      - run:
          name: Create PG
          command: sudo psql -h localhost -p 5432 -c "create database objection_find_test;" -U postgres
      - run:
          name: Create MySQL
          command: sudo mysql --host="127.0.0.1" -u root --password=pass -e "create database objection_find_test;"
      - run:
          name: Test
          command: npm run test:ci
      - save-npm-cache
  save-npm-cache:
    steps:
      - save_cache:
          key: v{{ .Environment.CIRCLE_CACHE_VERSION }}-{{ arch }}-npm-cache-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm/_cacache
jobs:
  node-v10:
    docker:
      - image: circleci/node:10
      - image: circleci/mysql
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: pass
      - image: circleci/postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - test-nodejs
  node-v12:
    docker:
      - image: circleci/node:12
      - image: circleci/mysql
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: pass
      - image: circleci/postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - test-nodejs
  node-v14:
    docker:
      - image: circleci/node:14
      - image: circleci/mysql
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: pass
      - image: circleci/postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - test-nodejs
  node-v15:
    docker:
      - image: circleci/node:15
      - image: circleci/mysql
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: pass
      - image: circleci/postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - test-nodejs
workflows:
  version: 2
  node-multi-build:
    jobs:
      - node-v10
      - node-v12
      - node-v14
      - node-v15
